@startuml
!includeurl https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml
!includeurl https://raw.githubusercontent.com/plantuml-stdlib/gilbarbara-plantuml-sprites/v1.1/sprites/python.puml
!includeurl https://raw.githubusercontent.com/plantuml-stdlib/gilbarbara-plantuml-sprites/v1.1/sprites/docker.puml
!includeurl https://raw.githubusercontent.com/plantuml-stdlib/gilbarbara-plantuml-sprites/v1.1/sprites/redis.puml
!includeurl https://raw.githubusercontent.com/plantuml-stdlib/gilbarbara-plantuml-sprites/v1.1/sprites/sqlite.puml
!includeurl https://raw.githubusercontent.com/plantuml-stdlib/gilbarbara-plantuml-sprites/v1.1/sprites/linux-tux.puml

LAYOUT_TOP_DOWN()
title Component Diagram - Web App
skinparam titleFontSize 24
skinparam defaultFontSize 20
skinparam dpi 150

' External systems
System_Ext(redis, "Redis", "Queue & PubSub", $sprite="redis")
System_Ext(db, "SQLite", "Metadata store", $sprite="sqlite")
System_Ext(email, "SMTP Server", "Email OTP")
System_Ext(docker, "Docker", "Container Execution", $sprite="docker")
System_Ext(fs, "Filesystem", "Stores user files", $sprite="linux-tux")
System_Ext(moodle, "Moodle", "Student Group CSV export")

Container_Boundary(web, "Web Application") {
  Component(router_auth, "Auth Router", "FastAPI Router", "Handles OTP login and JWT issuance")
  Component(router_submit, "Submission Router", "FastAPI Router", "Handles code submission and result viewing")
  Component(router_admin, "Admin Router", "FastAPI Router", "Manages tasks, groups, configs")

  Component(service_auth, "AuthService", "Service", "Validates OTP, generates tokens")
  Component(service_submit, "SubmissionService", "Service", "Saves code, queues test, streams result")
  Component(service_collab, "CollabService", "Service", "WebSocket support for live coding and messaging")
  Component(service_admin, "AdminService", "Service", "Creates tasks, courses, groups, views logs")

  Component(redis_pubsub, "RedisPubSub", "Infrastructure", "Handles pub/sub messages for real-time updates", $sprite="redis")
  Component(docker_wrapper, "DockerProxy", "Infrastructure", "Proxies code execution to running container", $sprite="docker")
  Component(fs_access, "FileManager", "Infrastructure", "Reads and writes Users code/logs", $sprite="linux-tux")
  Component(email_sender, "EmailClient", "Infrastructure", "Sends OTP email via SMTP")
  Component(repo_db, "DB Repository", "Repository", "Reads and writes user, group, task, and report data", $sprite="sqlite")
  Component(moodle_loader, "MoodleGroupLoader", "Infrastructure", "Imports User groups from Moodle CSV", $sprite="linux-tux")

  Rel(router_auth, service_auth, "OTP login + JWT issue")
  Rel(router_submit, service_submit, "Submit code + fetch results")
  Rel(router_admin, service_admin, "Instructor config operations")

  Rel(service_auth, email_sender, "Send OTP email")
  Rel(service_auth, repo_db, "User read/write")

  Rel(service_submit, fs_access, "Save User files")
  Rel(service_submit, redis_pubsub, "Notify Celery for test execution")
  Rel(service_submit, docker_wrapper, "Runtime proxy to container")
  Rel(service_submit, repo_db, "Save metadata")

  Rel(service_collab, redis_pubsub, "Send real-time updates")
  Rel(service_collab, repo_db, "Access group info")

  Rel(service_admin, repo_db, "Course + task metadata")
  Rel(service_admin, fs_access, "Upload test configs, reports")
  Rel(service_admin, moodle_loader, "Sync User groups/registrations")

  Rel(moodle_loader, moodle, "Load group CSV")
  Rel(redis_pubsub, redis, "WebSocket/Redis Events")
  Rel(repo_db, db, "Read/Write metadata")
  Rel(email_sender, email, "Send OTP via SMTP")
  Rel(docker_wrapper, docker, "Start container and exec code")
  Rel(fs_access, fs, "File I/O for code/logs")
}

SHOW_LEGEND()
@enduml


